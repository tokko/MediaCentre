version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=media_user
      - POSTGRES_PASSWORD=media_pass
      - POSTGRES_DB=media
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m

  sonarr:
    image: linuxserver/sonarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=sonarr;Username=media_user;Password=media_pass
      - DB_LOG_CONNECTION_STRING=Host=postgres;Port=5432;Database=sonarr_log;Username=media_user;Password=media_pass
    volumes:
      - /mnt/nfs_share/media/config/sonarr:/config
      - /mnt/nfs_share/media/tv:/tv
      - /mnt/nfs_share/media/downloads:/downloads
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.hostname != slave1
      labels:
        - traefik.enable=true
        - traefik.http.routers.sonarr.rule=Host(`sonarr.granbacken`)
        - traefik.http.routers.sonarr.entrypoints=web
        - traefik.http.services.sonarr.loadbalancer.server.port=8989
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m

  radarr:
    image: linuxserver/radarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - DB_LOG_CONNECTION_STRING=Host=postgres;Port=5432;Database=radarr_log;Username=media_user;Password=media_pass
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=radarr;Username=media_user;Password=media_pass
    volumes:
      - /mnt/nfs_share/media/config/radarr:/config
      - /mnt/nfs_share/media/movies:/movies
      - /mnt/nfs_share/media/downloads:/downloads
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.hostname != slave1
      labels:
        - traefik.enable=true
        - traefik.http.routers.radarr.rule=Host(`radarr.granbacken`)
        - traefik.http.routers.radarr.entrypoints=web
        - traefik.http.services.radarr.loadbalancer.server.port=7878
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m

  prowlarr:
    image: linuxserver/prowlarr:latest
    environment:
      - PUID=911
      - PGID=911
      - LOG_LEVEL=trace
      - PROXY_HOST=tor_proxy
      - PROXY_PORT=9050
      - DB_LOG_CONNECTION_STRING=Host=postgres;Port=5432;Database=prowlarr_log;Username=media_user;Password=media_pass
      - DB_CONNECTION_STRING=Host=postgres;Port=5432;Database=prowlarr;Username=media_user;Password=media_pass
    volumes:
      - /mnt/nfs_share/media/config/prowlarr:/config
      - /mnt/nfs_share/media/config/prowlarr/prowlarr-indexers/Custom:/config/Indexers
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.hostname != slave1
      labels:
        - traefik.enable=true
        - traefik.http.routers.prowlarr.rule=Host(`prowlarr.granbacken`)
        - traefik.http.routers.prowlarr.entrypoints=web
        - traefik.http.services.prowlarr.loadbalancer.server.port=9696
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m

  overseerr:
    image: sctx/overseerr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - DATABASE_URL=postgresql://media_user:media_pass@postgres:5432/overseerr
    volumes:
      - /mnt/nfs_share/media/config/overseerr:/app/config
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.hostname != slave1
      labels:
        - traefik.enable=true
        - traefik.http.routers.overseerr.rule=Host(`overseerr.granbacken`)
        - traefik.http.routers.overseerr.entrypoints=web
        - traefik.http.services.overseerr.loadbalancer.server.port=5055
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Stockholm
      - DB_CONNECTION=postgresql://media_user:media_pass@postgres:5432/bazarr
    volumes:
      - /mnt/nfs_share/media/config/bazarr:/config
      - /mnt/nfs_share/media/tv:/tv # Must match Sonarr’s path
      - /mnt/nfs_share/media/movies:/movies # Must match Radarr’s path
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.hostname != slave1
      labels:
        - traefik.enable=true
        - traefik.http.routers.bazarr.rule=Host(`bazarr.granbacken`)
        - traefik.http.routers.bazarr.entrypoints=web
        - traefik.http.services.bazarr.loadbalancer.server.port=6767
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m

  transmission:
    image: haugene/transmission-openvpn:latest
    environment:
      - PUID=1000
      - PGID=1000
      - OPENVPN_PROVIDER=NORDVPN
      - OPENVPN_USERNAME=6LF3z2srZKveb6qm6hiUJUmx
      - OPENVPN_PASSWORD=ZEC6inpHbH8psyHL1TguLeV4
      - OPENVPN_CONFIG=sg514
      - TRANSMISSION_DOWNLOAD_DIR=/downloads/completed
      - TRANSMISSION_INCOMPLETE_DIR=/downloads/incomplete
      - LOCAL_NETWORK=192.168.68.0/24
    volumes:
      - /mnt/nfs_share/media/downloads:/downloads
      - /mnt/nfs_share/media/config/transmission:/config
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      labels:
        - traefik.enable=true
        - traefik.http.routers.transmission.rule=Host(`transmission.granbacken`)
        - traefik.http.routers.transmission.entrypoints=web
        - traefik.http.services.transmission.loadbalancer.server.port=9091
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 256m
        reservations:
          memory: 128m
    cap_add:
      - NET_ADMIN
    ports:
      - "51413:51413"
      - "51413:51413/udp"

  tor_proxy:
    image: dperson/torproxy:latest
    ports:
      - "9050:9050"
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      resources:
        limits:
          memory: 128m
        reservations:
          memory: 64m

  plex:
    image: linuxserver/plex:latest
    environment:
      - PUID=1000
      - PGID=1000
      - PLEX_CLAIM=claim-fVcPQGeBVfDqcbYBx1r_
      - TZ=Europe/Stockholm
    volumes:
      - /mnt/nfs_share/media/config/plex:/config
      - /mnt/nfs_share/media/movies:/movies
      - /mnt/nfs_share/media/tv:/tv
      - /mnt/nfs_share/media/music:/music
    networks:
      - ingress_network
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      labels:
        - traefik.enable=true
        - traefik.http.routers.plex.rule=Host(`plex.granbacken`)
        - traefik.http.routers.plex.entrypoints=web
        - traefik.http.services.plex.loadbalancer.server.port=32400
        - traefik.docker.network=ingress_network
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /mnt/nfs_share/media/config/postgresql

networks:
  ingress_network:
    external: true
