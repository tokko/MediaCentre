version: '3.8'

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--log.level=DEBUG"
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik.rule=Host(`traefik`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.routers.traefik.entrypoints=web
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.metrics.rule=Host(`traefik`) && Path(`/metrics`)
        - traefik.http.routers.metrics.service=prometheus@internal
        - traefik.http.routers.metrics.entrypoints=traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ingress_network

  unbound:
    image: klutchell/unbound:latest
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      resources:
        limits:
          memory: 128m
        reservations:
          memory: 64m
    ports:
      - "53:53/udp"
      - "53:53/tcp"
    volumes:
      - ./unbound.conf:/etc/unbound/unbound.conf:ro
    networks:
      - ingress_network
    dns:
      - 213.80.98.2
      - 1.1.1.1
      - 8.8.8.8

networks:
  ingress_network:
    external: true
