version: '3.8'

services:
  traefik:
    image: traefik:v2.11
    command:
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.traefik.address=:8080"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--log.level=DEBUG"
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.traefik.rule=Host(`traefik.granbacken`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.routers.traefik.entrypoints=web
        - traefik.http.services.traefik.loadbalancer.server.port=8080
        - traefik.http.routers.metrics.rule=Host(`traefik.granbacken`) && Path(`/metrics`)
        - traefik.http.routers.metrics.service=prometheus@internal
        - traefik.http.routers.metrics.entrypoints=traefik
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - ingress_network

  unbound:
    image: klutchell/unbound:latest
    deploy:
      placement:
        constraints:
          - node.hostname == mediaserver
      resources:
        limits:
          memory: 128m
        reservations:
          memory: 64m
    ports:
      - "54:53/udp"
      - "54:53/tcp"
    volumes:
      - ./unbound.conf:/etc/unbound/unbound.conf:ro
    networks:
      - ingress_network
    dns:
      - 213.80.98.2
      - 1.1.1.1
      - 8.8.8.8

  wireguard:
    image: linuxserver/wireguard:latest
    cap_add:
      - NET_ADMIN
      - SYS_MODULE # Required to manage network interfaces and kernel modules
    environment:
      - PUID=1000 # Your user ID (run `id -u` on the Pi)
      - PGID=1000 # Your group ID (run `id -g` on the Pi)
      - TZ=Europe/Stockholm # Set your timezone
      - SERVERURL=granbacken.tplinkdns.com # MANDATORY: Your publicly accessible DDNS/domain name for the VPN
      # - SERVERPORT=51820 # Optional: Defaults to 51820
      - PEERS=phone,laptop # Comma-separated list of peer names you want to generate configs for
      # - PEERDNS=auto # Or specify your Unbound's IP: 172.x.x.x (see below)
      - INTERNAL_SUBNET=10.13.13.0/24 # Subnet for WireGuard VPN interface
      # - ALLOWEDIPS=0.0.0.0/0 # For full tunnel (all traffic goes through VPN).
                               # For split tunnel to access only local network:
      - ALLOWEDIPS=192.168.68.0/24, 172.17.0.0/12, 10.0.1.0/8 # Adjust to match your local LAN and Docker network subnets you want to access
    volumes:
      - /mnt/nfs_share/media/config/wireguard:/config # Persistent storage for WireGuard configuration and peer configs
      - /lib/modules:/lib/modules:ro # Needed for kernel modules
    ports:
      - "51820:51820/udp" # Standard WireGuard port
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1 # Needed for routing
      - net.ipv4.ip_forward=1 # Enable IP forwarding on the host is also good practice
    restart: unless-stopped
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.hostname == mediaserver # Or any node you want the VPN server on
    networks:
      - ingress_network # Or potentially 'host' mode for easier LAN access, but ingress_network with proper routing should work.
                        # If using 'host' mode, it won't be able to resolve services on ingress_network by name easily.

networks:
  ingress_network:
    external: true
